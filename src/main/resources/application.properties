# Application Configuration
spring.application.name=sports-tracker
server.port=8080

# Kafka Configuration - REAL KAFKA ENABLED
app.kafka.enabled=true
app.kafka.topic.sports-events=sports-events

# Spring Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3

# Consumer Configuration (optional - for testing)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=sports-tracker-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# External API Configuration
app.external-api.mock=true
app.external-api.url=http://localhost:8080/mock-sports-api

# Logging Configuration
logging.level.com.example.sports_tracker=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN

# Enable validation
spring.jackson.deserialization.fail-on-unknown-properties=false